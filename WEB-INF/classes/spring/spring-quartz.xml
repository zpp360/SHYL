<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd">

    <description>Quartz configuration</description>

    <!-- 调度工厂 -->
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	  <property name="triggers">
	    <list>
	      <!-- 可以定义多个 -->
	      <ref bean="carCardApplyDelTrigger"/>
	      <ref bean="appLogTrigger"/>
	      <ref bean="volunteerRankTrigger"/>
	      <ref bean="organizationLoveHourTrigger"/>
	      <ref bean="organizationRankTrigger"/>
	      <ref bean="regionRankTrigger"/>
	    </list>
	  </property>
	</bean>
	
	<!-- 调度触发器   停车证，每年12月31号触发-->
	<bean id="carCardApplyDelTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	  <property name="jobDetail">
	    <ref bean="carCardApplyDelJobDetail" />
	  </property>
	  <property name="cronExpression">
	    <value>0 0 23 31 12 ?</value>
	  </property>
	</bean>
	
	<bean id="carCardApplyDelJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	  <!--false表示等上一个任务执行完后再开启新的任务-->
	  <property name="concurrent" value="false"/>
	  <property name="targetObject">
	    <ref bean="carCardApplyDelJob"/>
	  </property>
	  <property name="targetMethod">
	    <value>execute</value>
	  </property>
	</bean>
	
	<bean id="carCardApplyDelJob" class="com.shyl.framework.quartz.CarCardApplyDelJob"></bean>
	
	
	<!-- 志愿者排名 start -->
	
	<bean id="volunteerRankTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	  <property name="jobDetail">
	    <ref bean="rankJobDetail" />
	  </property>
	  <property name="cronExpression">
	    <value>0 0/10 * * * ?</value>
	  </property>
	</bean>
	
	<bean id="rankJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	  <!--false表示等上一个任务执行完后再开启新的任务-->
	  <property name="concurrent" value="false"/>
	  <property name="targetObject">
	    <ref bean="rankJob"/>
	  </property>
	  <property name="targetMethod">
	    <value>volunteerRank</value>
	  </property>
	</bean>
	<bean id="rankJob" class="com.shyl.framework.quartz.RankJob"></bean>
	
	<!-- 志愿者排名 end -->
	
	
	<!-- 组织获取爱心小时数 start -->
	<bean id="organizationLoveHourTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	  <property name="jobDetail">
	    <ref bean="organizationLoveHourJobDetail" />
	  </property>
	  <property name="cronExpression">
	    <value>0 0/10 * * * ?</value>
	  </property>
	</bean>
	
	<bean id="organizationLoveHourJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	  <!--false表示等上一个任务执行完后再开启新的任务-->
	  <property name="concurrent" value="false"/>
	  <property name="targetObject">
	    <ref bean="rankJob"/>
	  </property>
	  <property name="targetMethod">
	    <value>organizationGetLoveHour</value>
	  </property>
	</bean>
	<!--组织获取爱心小时数 end -->
	
	
	<!-- 组织排名 start -->
	<bean id="organizationRankTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	  <property name="jobDetail">
	    <ref bean="organizationRankJobDetail" />
	  </property>
	  <property name="cronExpression">
	    <value>0 0/10 * * * ?</value>
	  </property>
	</bean>
	
	<bean id="organizationRankJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	  <!--false表示等上一个任务执行完后再开启新的任务-->
	  <property name="concurrent" value="false"/>
	  <property name="targetObject">
	    <ref bean="rankJob"/>
	  </property>
	  <property name="targetMethod">
	    <value>organizationRank</value>
	  </property>
	</bean>
	<!--组织排名 end -->
	
	<!-- 地市排名 start -->
	<bean id="regionRankTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	  <property name="jobDetail">
	    <ref bean="regionRankJobDetail" />
	  </property>
	  <property name="cronExpression">
	    <value>0 0/10 * * * ?</value>
	  </property>
	</bean>
	
	<bean id="regionRankJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	  <!--false表示等上一个任务执行完后再开启新的任务-->
	  <property name="concurrent" value="false"/>
	  <property name="targetObject">
	    <ref bean="rankJob"/>
	  </property>
	  <property name="targetMethod">
	    <value>regionRank</value>
	  </property>
	</bean>
	<!-- 地市排名 end -->
	
	<!-- app日志定时删除 -->
	<!-- 1、要调用的工作类 -->
	<bean id="appLog" class="com.shyl.aspect.AppLog"></bean>
	<!-- 2、定义调用对象和调用对象的方法 -->
	<bean id="appLogDelete" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="concurrent" value="false"/>
		<!-- 调用的类 -->
		<property name="targetObject">
			<ref bean="appLog"/>
		</property>
		<!-- 调用的方法 -->
		<property name="targetMethod">
			<value>deleteAppLog</value>
		</property>
	</bean>
	<!-- 3、定义触发时间 每天凌晨2点执行-->
	<bean id="appLogTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="appLogDelete"/>
		</property>
		<property name="cronExpression">
			<value>0 0 2 * * ?</value>
		</property>
	</bean>
	
	
</beans>

<!-- 
0 0 12 * * ? 每天12点触发 
0 15 10 ? * * 每天10点15分触发 
0 15 10 * * ? 每天10点15分触发 
0 15 10 * * ? * 每天10点15分触发 
0 15 10 * * ? 2005 2005年每天10点15分触发 
0 * 14 * * ? 每天下午的 2点到2点59分每分触发 
0 0/5 14 * * ? 每天下午的 2点到2点59分(整点开始，每隔5分触发) 
0 0/5 14,18 * * ? 每天下午的 2点到2点59分(整点开始，每隔5分触发) 
每天下午的 18点到18点59分(整点开始，每隔5分触发) 
0 0-5 14 * * ? 每天下午的 2点到2点05分每分触发 
0 10,44 14 ? 3 WED 3月分每周三下午的 2点10分和2点44分触发 （特殊情况，在一个时间设置里，执行两次或                                                             两次以上的情况） 
0 59 2 ? * FRI 每周5凌晨2点59分触发 
0 15 10 ? * MON-FRI 从周一到周五每天上午的10点15分触发 
0 15 10 15 * ? 每月15号上午10点15分触发 
0 15 10 L * ? 每月最后一天的10点15分触发 
0 15 10 ? * 6L 每月最后一周的星期五的10点15分触发 
0 15 10 ? * 6L 2002-2005 从2002年到2005年每月最后一周的星期五的10点15分触发 
0 15 10 ? * 6#3 每月的第三周的星期五开始触发 
0 0 12 1/5 * ? 每月的第一个中午开始每隔5天触发一次 
0 11 11 11 11 ? 每年的11月11号 11点11分触发(光棍节)
0 51 15 26 4 ? 2016 2016年4月26日15点51分出发
0 30 0 * * ?  每天半夜12点30分执行一次（注意日期域为0不是24）
0 0 2 * * ?   每天凌晨2点  
 -->